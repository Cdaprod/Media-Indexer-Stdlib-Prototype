name: CI Host Go Binaries & Release

on:
  push:
    branches: [ "**" ]
    tags:     [ "**" ]
    paths:
      - "host/services/**"
      - "Makefile"
      - "go.mod"
      - "go.sum"
      - "scripts/systemd/*.service"
      - ".github/workflows/ci-host-go-binaries.yml"
  pull_request:
    branches: [ "**" ]
    paths:
      - "host/services/**"
      - "Makefile"
      - "go.mod"
      - "go.sum"
      - "scripts/systemd/*.service"
      - ".github/workflows/ci-host-go-binaries.yml"
  workflow_dispatch:

jobs:
  build-go-host:
    name: Build & Test Go Host Binaries
    runs-on: ubuntu-latest
    env: { GO_VERSION: '1.22.x' }
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          check-latest: true
          cache: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-

      - name: Clean Go artifacts
        run: make clean-go

      - name: Build all Go host binaries
        run: |
          export CGO_ENABLED=0
          export GOFLAGS="-trimpath -buildvcs=true"
          make build-all

      - name: List built binaries
        run: |
          find host/services/ -type f -perm /u=x -maxdepth 3 -print -exec file {} \;

      - name: Run Go unit tests (-race, -shuffle)
        run: |
          set -e
          for dir in host/services/shared host/services/api-gateway host/services/capture-daemon; do
            if [ -f "$dir/go.mod" ]; then
              echo "ðŸ§ª $dir"
              (cd "$dir" && go test ./... -v -race -shuffle=on -count=1)
            fi
          done

      - name: Verify go.mod is tidy (per module if needed)
        run: |
          # If you have multiple modules, loop them. Otherwise root is fine.
          if [ -f go.mod ]; then
            go mod tidy
          fi
          git diff --exit-code go.mod go.sum || (echo "go.mod/go.sum are not tidy!" && exit 1)

      - name: Upload host Go binaries
        uses: actions/upload-artifact@v4
        with:
          name: host-go-binaries
          path: |
            host/services/api-gateway/api-gateway
            host/services/camera-proxy/camera-proxy
            host/services/capture-daemon/capture-daemon

      - name: Upload systemd service files
        uses: actions/upload-artifact@v4
        with:
          name: host-systemd-services
          path: scripts/systemd/*.service

  release-host-binaries:
    name: Package & Release Host Binaries
    runs-on: ubuntu-latest
    needs: build-go-host
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download host Go binaries artifact
        uses: actions/download-artifact@v4
        with:
          name: host-go-binaries
          path: host-binaries

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Package Host Binaries
        run: |
          tar czf host-binaries-${GITHUB_REF_NAME}.tar.gz -C host-binaries .
          ls -lh host-binaries-${GITHUB_REF_NAME}.tar.gz

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./host-binaries-${GITHUB_REF_NAME}.tar.gz
          asset_name: host-binaries-${GITHUB_REF_NAME}.tar.gz
          asset_content_type: application/gzip
# -- ci-test-changed-services.yml --------------------------------------------
#
# 1. Detects **service dirs** whose Dockerfile changed           → matrix lint/unit-test
# 2. Detects **compose layer files** or the root compose changed → single smoke boot
#
# All detection is dynamic – no hard-coded service names.
#
name: CI-Test-Changed-Services

on:
  pull_request:
    branches: ["**"]
    paths:
      - "docker/**"
      - "host/services/**"
      - "**/*.go"
      - "**/*.ts"
      - "**/*.py"
  workflow_dispatch:

jobs:
# ──────────────────────────────────────────────────────────────────────────────────────────────────
#  Detect what actually changed
# ──────────────────────────────────────────────────────────────────────────────────────────────────
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      svc_list:      ${{ steps.out.vars.svc_list }}
      svc_changed:   ${{ steps.out.vars.svc_changed }}
      compose_files: ${{ steps.out.vars.compose_files }}
      compose_changed: ${{ steps.out.vars.compose_changed }}
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}

      - id: out
        shell: bash
        run: |
          BASE_SHA=$(git merge-base origin/${{ github.base_ref }} HEAD)

          # 1) Services  ─────────────────────
          svc_dirs=$(git diff --name-only "$BASE_SHA" HEAD -- 'docker/*/Dockerfile' \
                       | awk -F/ '{print $2}' | sort -u)
          svc_json=$(printf '%s\n' $svc_dirs | jq -R -s -c 'split("\n")|map(select(length>0))')

          # 2) Compose YAMLs ──────────────────
          cmp_files=$(git diff --name-only "$BASE_SHA" HEAD -- \
                          'docker-compose*.y*ml' 'docker/compose/**/*.y*ml')
          cmp_changed="false"; [ -n "$cmp_files" ] && cmp_changed="true"

          echo "svc_list=$svc_json"            >> "$GITHUB_OUTPUT"
          echo "svc_changed=$([ -n "$svc_dirs" ] && echo true || echo false)" >> "$GITHUB_OUTPUT"
          echo "compose_files=$cmp_files"      >> "$GITHUB_OUTPUT"
          echo "compose_changed=$cmp_changed"  >> "$GITHUB_OUTPUT"

# ──────────────────────────────────────────────────────────────────────────────────────────────────
#  Lint + unit-test the **changed services only**
# ──────────────────────────────────────────────────────────────────────────────────────────────────
  test-services:
    needs: detect-changes
    if: needs.detect-changes.outputs.svc_changed == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.svc_list) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: '20' 
      - uses: docker/setup-buildx-action@v3
      - name: Install generic lint deps
        run: |
          sudo apt-get update && sudo apt-get install -y hadolint
          pip install pytest
          npm i -g eslint
      - name: Lint & unit-test ${{ matrix.service }}
        working-directory: docker/${{ matrix.service }}
        shell: bash
        run: |
          # Hadolint
          hadolint Dockerfile

          # Build locally (cache-only)
          docker build -t "local/${{ matrix.service }}:ci" .

          # ---- Language tests (if present) ----
          # Python
          if compgen -G "**/*.py" > /dev/null; then
            pytest -q || exit 1
          fi
          # Node
          if [ -f package.json ]; then
            npm ci
            npm test --if-present
          fi

          # Go tests live in host layer
          host=host/services/${{ matrix.service }}
          if [ -d "$host" ] && [ -f "$host/go.mod" ]; then
            go test "$host/..." -v
          fi

# ──────────────────────────────────────────────────────────────────────────────────────────────────
#  One-shot compose boot if *either* services or compose YAML changed
# ──────────────────────────────────────────────────────────────────────────────────────────────────
  compose-smoke:
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.svc_changed    == 'true' ||
      needs.detect-changes.outputs.compose_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      # Pre-build any changed images so compose can use :local tags
      - name: Pre-build changed services
        shell: bash
        run: |
          for svc in $(echo '${{ needs.detect-changes.outputs.svc_list }}' | jq -r '.[]'); do
            docker build -q -t "local/$svc:ci" "docker/$svc"
          done

      - name: Bring up *all* compose layers (base + every role)
        shell: bash
        run: |
          # auto-discover base + role files – keeps CI & dev identical
          FILES=$(ls docker/compose/docker-compose.*.y*ml | xargs printf -- '-f %s ')
          docker compose -f docker/compose/docker-compose.base.yaml $FILES up -d
          echo "⏳ waiting 30s for services..."
          sleep 30
          docker compose ps

      - name: Tear down
        if: always()
        run: docker compose down -v --remove-orphans


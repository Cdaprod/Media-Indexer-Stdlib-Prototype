########################################################################
# Root "/docker-compose.yaml"
########################################################################
name: thatdamtoolbox

########################################################################
# Network Bridge "damnet"
########################################################################
networks:
  damnet:
    driver: bridge

########################################################################
# Services
########################################################################
services:
  ########################################################################
  # 0. one-shot host configurator (runs only with `--profile setup`)
  ########################################################################
  hotspot-installer:
    image: thatdam-hotspot-installer:latest
    privileged: true
    network_mode: host
    profiles:
      - setup
    environment:
      SETUP_TOKEN_FILE: /run/secrets/dam_token
    secrets:
      - source: dam_ephemeral_token
        target: dam_token
    restart: "no"

  ########################################################################
  # 1. public front-door (owns :80 / :443 on the Pi)
  ########################################################################
  gw:
    build:
      context: docker/nginx
    container_name: thatdam-gateway
    network_mode: host
    restart: unless-stopped
    depends_on:
      video-api:
        condition: service_healthy
      video-web:
        condition: service_started
    environment:
      API_HOST: "127.0.0.1"
      API_PORT: "8080"
      WEB_HOST: "127.0.0.1"
      WEB_PORT: "3000"
    volumes:
      - ./docker/nginx/nginx.tmpl:/etc/nginx/nginx.tmpl:ro
      - ./docker/nginx/html:/usr/share/nginx/html:ro
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  ########################################################################
  # 2. infra – RabbitMQ
  ########################################################################
  rabbitmq:
    image: rabbitmq:3.13-alpine
    container_name: thatdamtoolbox-rabbitmq
    restart: unless-stopped
    networks:
      - damnet
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: video
      RABBITMQ_DEFAULT_PASS: video
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  ########################################################################
  # 3. capture daemon (needs /dev + v4l2)
  ########################################################################
  capture-daemon:
    build:
      context: ./host/services/capture-daemon
      dockerfile: Dockerfile
    image: cdaprod/video-capture-daemon:latest
    container_name: thatdamtoolbox-capture-daemon
    networks:
      - damnet
    privileged: true
    pid: host
    init: false
    environment:
      AMQP_URL: "amqp://video:video@rabbitmq:5672/"
      REGISTRY_URL: "docker.io/cdaprod/capture-daemon:latest"
      CAPTURE_OUTDIR: "/records"
    volumes:
      - /dev:/dev
      - /lib/modules:/lib/modules:ro
      - ./data/modules/hwcapture/records:/records
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:9000/devices"]
      interval: 10s
      timeout: 3s
      retries: 3
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  ########################################################################
  # 4. FastAPI back-end (bridge mode → host:8080)
  ########################################################################
  video-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: cdaprod/video:dev
    container_name: thatdamtoolbox-video-api
    platform: linux/arm64
    networks:
      - damnet
    ports:
      - "8080:8080"
    user: "1000:1000"
    device_cgroup_rules:
      - "c 81:* rmw"
    group_add:
      - "44"
    cap_add:
      - SYS_ADMIN
    environment:
      TZ: "America/New_York"
      VIDEO_MODE: "api"
      PYTHONWARNINGS: >-
        ignore::DeprecationWarning,
        ignore::UserWarning:google.protobuf.runtime_version
      XDG_CACHE_HOME: "/data/cache"
      HF_HOME: "/data/cache/huggingface"
      TORCH_HOME: "/data/cache/torch"
      UVICORN_WORKERS: "1"
      VIDEO_FORCE_STDHTTP: "0"
      VIDEO_DATA_DIR: "/data"
      VIDEO_MEDIA_ROOT: "/data/media"
      VIDEO_PROCESSED_ROOT: "/data/_PROCESSED"
      VIDEO_PREVIEW_ROOT: "/data/previews"
      VIDEO_LOG_DIR: "/data/logs"
      VIDEO_DB_PATH: "/var/lib/thatdamtoolbox/db/live.sqlite3"
      DB_SNAPSHOT_SECS: "120"
      VIDEO_STORAGE: "auto"
      VIDEO_DEBUG_BOOT: "0"
      EVENT_BROKER_URL: "amqp://video:video@rabbitmq:5672/"
      CAPTURE_REGISTRY_URL: "http://capture-daemon:9000"
    volumes:
      - "${DATA_ROOT:-./data}:/data:rw"
      - "${INCOMING_ROOT:-./incoming}:/data/_INCOMING:rw"
      - db_wal:/var/lib/thatdamtoolbox/db:rw
      - /dev:/dev:rw,rshared
      - ./video:/video:rw
    command:
      - serve
      - --host
      - "0.0.0.0"
      - --port
      - "8080"
    mem_limit: 1500m
    cpus: 1.0
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/health || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 3
    depends_on:
      capture-daemon:
        condition: service_healthy

  ########################################################################
  # 5. Next.js dev server (dev-only)
  ########################################################################
  video-web:
    build:
      context: ./docker/web-app
      dockerfile: Dockerfile
      target: development
    image: cdaprod/video-web:dev
    container_name: thatdamtoolbox-video-web-app
    platform: linux/arm64
    networks:
      - damnet
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: "development"
      NEXT_PUBLIC_API_BASE_URL: "http://video-api:8080"
      NEXT_PUBLIC_WS_URL: "ws://video-api:8080/ws/camera"
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./docker/web-app:/app:rw
      - /app/node_modules
      - /app/.next
    depends_on:
      - video-api
    restart: unless-stopped
    mem_limit: 512m
    cpus: 0.5
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  ########################################################################
  # 6. optional CLI job
  ########################################################################
  video-cli:
    image: cdaprod/video:dev
    container_name: thatdamtoolbox-video-cli-ephemeral
    networks:
      - damnet
    profiles:
      - hydrate-backend
      - cli
    entrypoint:
      - python
      - -m
      - video
    command:
      - scan
      - --root
      - "/data/_INCOMING"
      - --workers
      - "1"
    volumes:
      - /mnt/b/Video/thatdamtoolbox:/data:rw
      - /mnt/b/Video/_INCOMING:/data/_INCOMING:rw
      - db_wal:/var/lib/thatdamtoolbox/db:rw
    restart: "no"

########################################################################
# Volumes
########################################################################
volumes:
  db_wal:
    driver: local
  rabbitmq_data:
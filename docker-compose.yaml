# /docker-compose.yaml
name: thatdamtoolbox

networks:
  damnet:
    driver: bridge

services:
  video-api:
    build:
      context: .
      dockerfile: Dockerfile2           # Multi-arch build
    image: cdaprod/video:dev
    platform: linux/arm64               # Pi 5; drop for x86-64 dev
    # --- Networking (host-mode exposes 8080) ---
    network_mode: host
    # ports: ["8080:8080"]              # Unneeded in host mode
    # --- Environment ---------------------------
    user: "1000:1000"
    environment:
      PYTHONWARNINGS: "ignore::DeprecationWarning"
      TZ: America/New_York
      UVICORN_WORKERS: "1"              # dev: 1  •  prod: 4
      # VIDEO_FORCE_STDHTTP: "1"        # Force stdlib HTTP (optional)
      # ------------------------------------------------------------------
      # Make ALL mutable data live under one bind-mount ( /data )
      # ------------------------------------------------------------------
      VIDEO_DATA_DIR: /data          # <- your DATA_DIR in video/config.py
      # --- Storage backend selector -------------
      VIDEO_STORAGE: "auto" 
      # VIDEO_STORAGE=sqlite                      # Default (no env needed)
      # VIDEO_STORAGE=faiss                       # Use Faiss vector index
      # VIDEO_STORAGE=weaviate                    # Use Weaviate backend
      # WEAVIATE_URL=http://localhost:8081        # For Weaviate backend:
      # MINIO_ENDPOINT: "http://localhost:9000"   # Optional if your code needs it
      VIDEO_DEBUG_BOOT: "0"
      DB_SNAPSHOT_SECS: "120"                     # optional
      #VIDEO_DB_PATH: /var/lib/thatdamtoolbox/db/live.sqlite3
      VIDEO_DB_PATH: /data/db/live.sqlite3
    # --- Device permissions & hotplug ----------
    # devices:
    #   - /dev/video0:/dev/video0
    #   - /dev/video1:/dev/video1
    #   - /dev/vchiq:/dev/vchiq
    #   - /dev/dri:/dev/dri             # DRM for encoders/GL
    device_cgroup_rules:
      - "c 81:* rmw"                    # hot-plug /dev/video*
    group_add:
      - "44"                            # video group (GID 44 on Pi OS)
    privileged: true                    # access /dev/video*
    # --- Storage mounts ------------------------
    volumes:
      # --- Production Mounts ---------------------
      # 1. Entire persistent dataset (media, db, previews, …)
      - ./data/db:/var/lib/thatdamtoolbox/db:rw
      - /mnt/b/Video/thatdamtoolbox:/data:rw
      # 2. Overlay the staging dir so the container sees it at /data/_INCOMING
      - /mnt/b/Video/_INCOMING:/data/_INCOMING:rw
      # 3. Live source for hot-reload (dev only)
      - ./video:/video:rw
    restart: unless-stopped
    # --- Entrypoint & Health -------------------
    # entrypoint: ["python", "-m", "video"]
    # command: [stats]                         # CLI command (optional)
    command: ["serve", "--host", "0.0.0.0", "--port", "8080"]
    mem_limit: 1500m
    cpus: 1.0
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/health || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 3


  video-web:
    build:
      context: ./docker/web-app
      dockerfile: Dockerfile
      target: development
    image: cdaprod/video-web:dev
    platform: linux/arm64
    ports:
      - "3000:3000"
    # ------------------ MAGIC HACK ------------------
    # let "host.docker.internal" point at your host (where video-api is in host mode)
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - damnet
    environment:
      NODE_ENV: development

      # ← change these to talk to host.docker.internal
      NEXT_PUBLIC_API_BASE_URL: "http://host.docker.internal:8080"
      NEXT_PUBLIC_WS_URL:      "ws://host.docker.internal:8080/ws"

      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./docker/web-app:/app:rw
      - /app/node_modules
      - /app/.next
    depends_on:
      - video-api
    restart: unless-stopped
    mem_limit: 512m
    cpus: 0.5
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3


  # --- Optional CLI one-shot container ---------
  video-cli:
    image: cdaprod/video:dev
    entrypoint: ["python", "-m", "video"]
    command: ["stats"]                        # Any CLI verb
    volumes:
      - ./data/media:/media
      - ./data/db:/var/lib/thatdamtoolbox/db:rw
    depends_on: [video-api]
    profiles: ["cli"]
    